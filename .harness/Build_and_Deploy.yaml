pipeline:
  name: Build and Deploy
  identifier: Build_and_Deploy
  projectIdentifier: Hubot
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.suranc_Account_Level
        repoName: fugawi-bot
        build: <+input>
  stages:
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.sacluster
              namespace: chris-builds
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build and Push an image to Docker Registry_1
                  identifier: BuildandPushanimagetoDockerRegistry_1
                  spec:
                    connectorRef: account.Account_Level_suranc_GitHub_Docker_Registry
                    repo: ghcr.io/suranc/fugawi-bot
                    tags:
                      - latest
    - stage:
        name: Deploy to Prod
        identifier: Deploy_to_Prod
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: fugawibot
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  artifacts:
                    primary:
                      primaryArtifactRef: fugawi-image
                      sources:
                        - identifier: fugawi-image
                          type: DockerRegistry
                          spec:
                            tag: latest
          environment:
            environmentRef: Prod
            deployToAll: false
            infrastructureDefinitions:
              - identifier: Prod
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
